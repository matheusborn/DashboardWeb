{"version":3,"sources":["services/api.js","services/auth.js","Components/Alerts.jsx","Views/Login.jsx","Components/TableDash.jsx","Components/DashCard.jsx","Views/Home.jsx","Views/AboutUs.jsx","Views/Login2.jsx","Components/Logout.jsx","Components/NavbarDash.jsx","routes.js","App.js","serviceWorker.js","index.js","assets/img/logo.png"],"names":["api","axios","create","baseURL","backend","interceptors","request","use","a","config","token","localStorage","getItem","headers","response","error","Promise","reject","Alerts","props","useState","show","setShow","styles","alert","alertClass","setAlertClass","useEffect","showAlert","timer","setTimeout","clearInterval","start","Fragment","type","sentences","bodyText","split","pagragraphs","map","sentence","index","push","key","style","zIndex","Alert","variant","body","renderSimpleAlert","Heading","className","Button","onClick","console","log","renderAlert","position","left","transform","opacity","transition","Login","userName","setUserName","password","setPassword","history","useHistory","useForm","register","handleSubmit","reset","errors","showLogoutAlert","setShowLogoutAlert","showErrorMessage","setShowErrorMessage","errorMessage","onSubmit","data","e","target","setItem","removeItem","clearTimeout","container","loginWrapper","border","logo","src","borderRadius","width","height","alt","margin","inputWrapper","autoFocus","input","name","placeholder","defaultValue","ref","required","onChange","value","button","usuario","senha","message","backgroundImage","top","backgroundColor","boxShadow","textAlign","marginBottom","borderStyle","borderWidth","borderColor","marginTop","paddingLeft","color","customTotal","from","to","size","SearchBar","Search","TableDash","keyField","setKeyField","setData","dataField","columns","setColumns","today","Date","defaultSorted","order","pagination","paginationFactory","sizePerPageList","text","length","showTotal","paginationTotalRenderer","update","ClearButton","onClear","ExportButton","exportButton","onExport","Card","Header","as","title","Body","search","searchFormatted","exportCSV","fileName","getDate","getMonth","getFullYear","display","marginRight","searchProps","csvProps","window","location","reload","baseProps","bootstrap4","hover","noDataIndication","cellEdit","cellEditFactory","mode","blurToSave","marginLeft","float","DashCard","alignItems","icon","isNaN","Number","toLocaleString","unit","fontSize","timestamp","padding","Home","showNewStationModal","setShowNewStationModal","rainIcon","faCloudRain","dropIcon","faTint","alertVariant","setAlertVariant","alertBodyText","setAlertBodyText","setShowAlert","rain","accMensal","stationCard","setStationCard","showModalSelectStation","setShowModalSelectStation","id","userid","esn","depth","station","setStation","userOptions","stationOptions","setStationOptions","stationChanged","setStationChanged","showEditStationModal","setShowEditStationModal","userChangedEdit","setUserChangedEdit","stationChangedEdit","setStationChangedEdit","label","graphData","setGraphData","isMaster","graphDataLoaded","setGraphDataLoaded","monthName","setMonthName","monthArray","sort","headerClasses","editable","headerStyle","resize","overflow","formatter","columnsCerrado","populateUserOptions","populateStationOptions","fetchStationData","fetchCerradoTableData","fetchFreeTableData","populateStationEditOptions","stationId","accRainDay","accNivelDay","qntdDados","get","then","res","currentDay","date","dado","level","lastDate","undefined","setDate","catch","err","stationEditOptions","user","stationDefault","dataArray","qntd","Math","random","toFixed","getTime","handleChangeStation","stationName","filter","st","children","handleSaveNewStation","post","handleStationChangedEdit","handleUpdateModem","put","renderSelectStationContainer","alignSelf","selfAlign","cardsContainer","renderStationDash","Modal","justifyContent","onHide","closeButton","Title","Footer","chartType","chartLanguage","loader","options","chart","series","0","axis","1","axes","y","nivel","rootProps","min","modem","header","line","borderBottom","shadow","textShadow","AboutUs","Login2","station1","setStation1","station2","setStation2","station3","setStation3","faSatellite","faSatelliteDish","pathname","Row","Col","Container","fluid","md","paddingTop","Logout","NavbarDash","Navbar","bg","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","Nav","activeKey","activekey","Link","exact","path","PrivateRoute","Component","component","rest","render","state","Routes","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d9bd89d0.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { getToken } from './auth';\r\nimport { backend } from '../Variables/variables';\r\n\r\nconst api = axios.create({\r\n  baseURL: backend,\r\n});\r\n\r\napi.interceptors.request.use(async (config) => {\r\n  const token = getToken();\r\n  if (token) {\r\n    config.headers.token = `${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default api;\r\n\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error.response);\r\n  }\r\n);\r\n","export const TOKEN_KEY = 'dash-token';\r\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\r\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\r\nexport const login = (token) => {\r\n  localStorage.setItem(TOKEN_KEY, token);\r\n};\r\nexport const logout = () => {\r\n  localStorage.removeItem(TOKEN_KEY);\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n//receives a type {simple, simpleLink, content }\r\n//receives variant { variant: 'primary' || 'secundary' || 'sucess' || 'danger' || 'warning' || info || 'light' || 'dark' }\r\n//receives a dismissable {false, xDismiss, buttonDismiss}\r\n\r\n//if type is simple, receives {bodyText}\r\n//if type is content, receives {headingText, bodyText, footerText (optional)}\r\n//if type is simpleLink, receives {link: 'a tag with link'}\r\n\r\nconst Alerts = (props) => {\r\n  const [show, setShow] = useState(true);\r\n  const [alertClass, setAlertClass] = useState(styles.alert);\r\n\r\n  const renderSimpleAlert = () => {\r\n    const sentences = props.bodyText.split('\\\\');\r\n    const pagragraphs = [];\r\n    sentences.map((sentence, index) =>\r\n      pagragraphs.push(\r\n        <div key={index}>\r\n          <span>{sentence}</span>\r\n        </div>\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div style={{ zIndex: 99, ...alertClass }}>\r\n        <Alert show={props.show && show} variant={props.variant}>\r\n          {props.body} {pagragraphs}\r\n        </Alert>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const start = () => {\r\n      setAlertClass({ ...styles.alert, ...styles.showAlert });\r\n\r\n      const timer = setTimeout(() => {\r\n        setAlertClass({ ...styles.alert });\r\n        setShow(false);\r\n        clearInterval(timer);\r\n      }, 5000);\r\n    };\r\n\r\n    start();\r\n\r\n    return;\r\n  }, []);\r\n\r\n  function AlertDismissible() {\r\n    return (\r\n      <div style={{ zIndex: 99, ...alertClass }}>\r\n        <Alert show={props.show && show} variant='success'>\r\n          <Alert.Heading>How's it going?!</Alert.Heading>\r\n          <p>\r\n            Duis mollis, est non commodo luctus, nisi erat porttitor ligula,\r\n            eget lacinia odio sem nec elit. Cras mattis consectetur purus sit\r\n            amet fermentum.\r\n          </p>\r\n          <hr />\r\n          <div className='d-flex justify-content-end'>\r\n            <Button onClick={() => setShow(false)} variant='outline-success'>\r\n              Close me y'all!\r\n            </Button>\r\n          </div>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const renderAlert = (type) => {\r\n    switch (type) {\r\n      case 'simple':\r\n        return renderSimpleAlert();\r\n      case 'simpleLink':\r\n        return 'not implemented';\r\n      case 'content':\r\n        return AlertDismissible();\r\n      default:\r\n        console.log('Wrong alert type');\r\n    }\r\n  };\r\n\r\n  return <React.Fragment>{renderAlert(props.type)}</React.Fragment>;\r\n};\r\n\r\nexport default Alerts;\r\n\r\nconst styles = {\r\n  alert: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    transform: 'translate(-50%, 20%)',\r\n\r\n    opacity: 0,\r\n    transition: 'opacity .5s ease-out',\r\n  },\r\n\r\n  showAlert: {\r\n    opacity: 1,\r\n    transition: 'opacity .5s ease-in',\r\n  },\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport '../assets/css/Login.css';\r\nimport logo from '../assets/img/logo.png';\r\nimport api from '../services/api';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport Alerts from '../Components/Alerts';\r\n\r\nconst Login = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n  const { register, handleSubmit, reset, errors } = useForm();\r\n  const [showLogoutAlert, setShowLogoutAlert] = useState(false);\r\n\r\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.target.reset();\r\n    setShowErrorMessage(false);\r\n    // const response = api.post('login', {\r\n    //   user: data.usuario,\r\n    //   password: data.senha,\r\n    // });\r\n    // response\r\n    //   .then((res) => localStorage.setItem('dash-token', res.data))\r\n    //   .then(() => localStorage.removeItem('logout'))\r\n    //   .then(() => {\r\n    //     if (data.usuario.toUpperCase() === 'bla'.toUpperCase()) {\r\n    //       localStorage.setItem('bla', true);\r\n    //     }\r\n    //   })\r\n    //   .then(() =>\r\n    //     history.push({\r\n    //       pathname: '/dashboard/',\r\n    //     })\r\n    //   )\r\n    //   .catch((err) => {\r\n    //     setErrorMessage(err.data);\r\n    //     setShowErrorMessage(true);\r\n    //   });\r\n\r\n    localStorage.setItem('dash-token', 'fake token');\r\n    localStorage.removeItem('logout');\r\n    history.push('/dashboard/')\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('logout')) {\r\n      setShowLogoutAlert(true);\r\n    }\r\n\r\n    localStorage.removeItem('logout');\r\n    const timer = setTimeout(() => {\r\n      setShowLogoutAlert(false);\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const renderErrorMessage = () => {\r\n    return <Alerts type='simple' variant='danger' bodyText={errorMessage} />;\r\n  };\r\n\r\n  const renderSignIn = () => {\r\n    return (\r\n      <div style={{ ...styles.loginWrapper, border: '' }}>\r\n        <div>\r\n          <div style={styles.logo}>\r\n            <img src={logo} style={{borderRadius: '50%'}} width='150' height='150' alt='dash logo' />\r\n          </div>\r\n          <h2 style={{ margin: '0px' }}>Welcome to Dashboard Web</h2>\r\n          <h6>Author: Matheus Barros</h6>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div style={styles.inputWrapper}>\r\n              <input\r\n                autoFocus\r\n                style={styles.input}\r\n                name='usuario'\r\n                type='text'\r\n                placeholder='Usuário'\r\n                defaultValue={userName}\r\n                ref={register({ required: 'Campo usuário está vazio. Any username will do' })}\r\n                onChange={(e) => {\r\n                  setShowErrorMessage(false);\r\n                  setUserName(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                style={styles.input}\r\n                name='senha'\r\n                type='password'\r\n                placeholder='Senha'\r\n                defaultValue={password}\r\n                ref={register({ required: 'Campo senha está vazio. Any password will do' })}\r\n                onChange={(e) => {\r\n                  setShowErrorMessage(false);\r\n                  setPassword(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <Button onClick={() => reset()} type='submit' style={styles.button}>\r\n              Entrar\r\n            </Button>\r\n\r\n            {(errors.usuario || errors.senha) && (\r\n              <Alerts\r\n                type='simple'\r\n                variant='danger'\r\n                bodyText={\r\n                  errors.usuario ? errors.usuario.message : errors.senha.message\r\n                }\r\n              />\r\n            )}\r\n\r\n            {showErrorMessage && renderErrorMessage()}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <Alerts\r\n        show={showLogoutAlert}\r\n        type='simple'\r\n        variant='success'\r\n        bodyText='Thank you for utilizing our product!\\We hope to see you soon =]'\r\n      />\r\n      {renderSignIn()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'absolute',\r\n    height: '100%',\r\n    width: '100%',\r\n    backgroundImage: 'linear-gradient(#9ad1d4,#fa828b)',\r\n  },\r\n\r\n  loginWrapper: {\r\n    position: 'relative',\r\n    top: 'calc(20%)',\r\n    left: 'calc(30.65%)',\r\n    height: '430px',\r\n    width: '600px',\r\n    backgroundColor: 'lavender',\r\n    boxShadow: '0px 4px 20px 4px black',\r\n    textAlign: 'center',\r\n    borderRadius: '3px',\r\n  },\r\n\r\n  input: {\r\n    textAlign: 'center',\r\n    marginBottom: '5px',\r\n    borderStyle: 'inset',\r\n    borderWidth: 'small',\r\n    borderColor: 'lightgray',\r\n  },\r\n\r\n  button: {\r\n    marginTop: '15px',\r\n    paddingLeft: '15px',\r\n    backgroundColor: '#fa828b',\r\n    color: '#e6e6fa',\r\n    borderColor: '#e6e6fa',\r\n  },\r\n\r\n  logo: {\r\n    position: 'relative',\r\n    top: '15px',\r\n    borderRadius: '50% !important',\r\n    marginBottom: '20px',\r\n    marginTop: '10px'\r\n  },\r\n\r\n  inputWrapper: {\r\n    marginTop: '30px',\r\n  },\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport '../assets/css/TableDash.css';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport Card from 'react-bootstrap/Card';\r\nimport cellEditFactory from 'react-bootstrap-table2-editor';\r\n\r\n//receives { dataField: 'qual coluna é a chave?', title: 'titulo', data: 'dados da tabela', columns: 'colunas da tabela'}\r\n\r\nconst customTotal = (from, to, size) => (\r\n  <span className='react-bootstrap-table-pagination-total'>\r\n    Mostrando de {from} a {to} de {size} resultados\r\n  </span>\r\n);\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst TableDash = (props) => {\r\n  const [keyField, setKeyField] = useState('id');\r\n  const [data, setData] = useState([]);\r\n  const [columns, setColumns] = useState([{ dataField: 'id' }]);\r\n  const today = new Date();\r\n\r\n  const defaultSorted = [\r\n    {\r\n      dataField: props.keyField,\r\n      order: 'asc',\r\n    },\r\n  ];\r\n\r\n  const pagination = paginationFactory({\r\n    sizePerPageList: [\r\n      {\r\n        text: '10',\r\n        value: 10,\r\n      },\r\n      {\r\n        text: '25',\r\n        value: 25,\r\n      },\r\n      {\r\n        text: '50',\r\n        value: 50,\r\n      },\r\n      {\r\n        text: 'Tudo',\r\n        value: data.length,\r\n      },\r\n    ],\r\n\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const update = async () => {\r\n      await setKeyField(props.keyField);\r\n      await setData(props.data);\r\n      await setColumns(props.columns);\r\n    };\r\n\r\n    update();\r\n  }, [props]);\r\n\r\n  // ustom button component\r\n  const ClearButton = (props) => {\r\n    return (\r\n      <Button\r\n        style={styles.button}\r\n        variant='outline-info'\r\n        onClick={() => props.onClear()}\r\n      >\r\n        Limpar\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const ExportButton = (props) => {\r\n    return (\r\n      <Button\r\n        style={styles.exportButton}\r\n        onClick={() => props.onExport()}\r\n        variant='info'\r\n      >\r\n        Exportar CSV\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{ borderColor: '#17a2b8' }}>\r\n        <Card.Header as='h5'>{props.title || ''}</Card.Header>\r\n        <Card.Body>\r\n          <ToolkitProvider\r\n            keyField={keyField}\r\n            data={data}\r\n            columns={columns}\r\n            search={{ searchFormatted: true }}\r\n            exportCSV={{\r\n              fileName: `dashboard_${today.getDate()}-${\r\n                today.getMonth() + 1\r\n              }-${today.getFullYear()}.csv`,\r\n            }}\r\n          >\r\n            {(props) => (\r\n              <div>\r\n                <h6 style={{ display: 'inline-flex', marginRight: '10px' }}>\r\n                  Filtrar:\r\n                </h6>\r\n                <SearchBar\r\n                  style={{ display: 'inline-flex' }}\r\n                  placeholder={'Pesquisar'}\r\n                  {...props.searchProps}\r\n                />\r\n                <ClearButton text={'Limpar'} {...props.searchProps} />\r\n                <ExportButton {...props.csvProps}>Exportar CSV</ExportButton>\r\n                {!localStorage.getItem('bla') ? (\r\n                  <Button\r\n                    onClick={() => window.location.reload()}\r\n                    style={styles.button}\r\n                    variant='info'\r\n                  >\r\n                    Atualizar\r\n                  </Button>\r\n                ) : null}\r\n\r\n                <BootstrapTable\r\n                  {...props.baseProps}\r\n                  bootstrap4\r\n                  hover\r\n                  keyField={keyField}\r\n                  data={data}\r\n                  columns={columns}\r\n                  defaultSorted={defaultSorted}\r\n                  pagination={pagination}\r\n                  noDataIndication={() => 'Não há dados'}\r\n                  cellEdit={cellEditFactory({\r\n                    mode: 'click',\r\n                    blurToSave: true,\r\n                  })}\r\n                />\r\n              </div>\r\n            )}\r\n          </ToolkitProvider>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableDash;\r\n\r\nconst styles = {\r\n  button: {\r\n    marginLeft: '10px',\r\n  },\r\n  exportButton: {\r\n    float: 'right',\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nconst DashCard = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div style={styles.container}>\r\n        <div>\r\n          <h7>{props.title}</h7>\r\n          <br />\r\n          <div\r\n            style={{\r\n              ...styles.body,\r\n              color: '#003366',\r\n              alignItems: 'center',\r\n              marginBottom: '0px',\r\n            }}\r\n          >\r\n            <div style={styles.icon}>{props.icon}</div>\r\n            <h4>{`${\r\n              isNaN(props.value)\r\n                ? '-'\r\n                : Number(props.value).toLocaleString('pt-BR') + ` ${props.unit}`\r\n            }`}</h4>\r\n          </div>\r\n          <hr\r\n            style={{\r\n              color: 'black',\r\n              height: 1,\r\n              position: 'relative',\r\n              margin: '0px',\r\n            }}\r\n          />\r\n          <span style={{ fontSize: '15px', position: 'relative' }}>\r\n            {`Atualizado em: ${\r\n              props.timestamp === '-'\r\n                ? ' ' + props.timestamp\r\n                : new Date(props.timestamp).toLocaleString('pt-BR')\r\n            }`}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DashCard;\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'relative',\r\n    height: '105px',\r\n    width: '260px',\r\n    backgroundColor: 'lavender',\r\n    boxShadow: '0px 2px 10px 2px black',\r\n    textAlign: 'center',\r\n    borderRadius: '3px',\r\n    margin: '0px 10px 10px',\r\n    padding: '5px',\r\n  },\r\n  icon: {\r\n    fontSize: '30px',\r\n    marginRight: '10px',\r\n    position: 'relative',\r\n    top: '-2px'\r\n  },\r\n  body: { display: 'inline-flex' },\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TableDash from '../Components/TableDash';\r\nimport api from '../services/api';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport DashCard from '../Components/DashCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCloudRain, faTint } from '@fortawesome/free-solid-svg-icons';\r\nimport Alerts from '../Components/Alerts';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [showNewStationModal, setShowNewStationModal] = useState(false);\r\n  const rainIcon = (\r\n    <FontAwesomeIcon icon={faCloudRain} color='rgb(135, 189, 216)' />\r\n  );\r\n  const dropIcon = <FontAwesomeIcon icon={faTint} color='rgb(135, 189, 216)' />;\r\n  const [alertVariant, setAlertVariant] = useState('success');\r\n  const [alertBodyText, setAlertBodyText] = useState('teste');\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [stationCard, setStationCard] = useState({\r\n    rain: '-',\r\n    accMensal: '-',\r\n    timestamp: '-',\r\n  });\r\n  const [showModalSelectStation, setShowModalSelectStation] = useState(false);\r\n  const [station, setStation] = useState({\r\n    id: '-',\r\n    userid: '-',\r\n    name: '',\r\n    esn: '',\r\n    depth: '',\r\n  });\r\n  const [userOptions, setUserOptions] = useState([]);\r\n  const [stationOptions, setStationOptions] = useState([]);\r\n  const [stationChanged, setStationChanged] = useState(true);\r\n  const [showEditStationModal, setShowEditStationModal] = useState(false);\r\n  const [userChangedEdit, setUserChangedEdit] = useState(false);\r\n  const [stationChangedEdit, setStationChangedEdit] = useState(true);\r\n  const [graphData, setGraphData] = useState(\r\n    [\r\n      { type: 'date', label: 'Tempo' },\r\n      'Acumulado de Precipitação',\r\n      'Média do Nível do Rio',\r\n    ],\r\n    [new Date(), 0, 0]\r\n  );\r\n  const [isMaster, setIsMaster] = useState(false);\r\n  const [graphDataLoaded, setGraphDataLoaded] = useState(false);\r\n  const [monthName, setMonthName] = useState('');\r\n  const monthArray = [\r\n    'janeiro',\r\n    'fevereiro',\r\n    'março',\r\n    'abril',\r\n    'maio',\r\n    'junho',\r\n    'julho',\r\n    'agosto',\r\n    'setembro',\r\n    'outubro',\r\n    'novembro',\r\n    'dezembro',\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      dataField: 'id',\r\n      text: 'ID',\r\n      sort: true,\r\n      headerClasses: 'column-title',\r\n      editable: false,\r\n      headerStyle: {\r\n        resize: 'horizontal',\r\n        overflow: 'auto',\r\n      },\r\n    },\r\n    {\r\n      dataField: 'esn',\r\n      text: 'Número de série',\r\n      sort: true,\r\n      headerClasses: 'column-title',\r\n      headerStyle: {\r\n        resize: 'horizontal',\r\n        overflow: 'auto',\r\n      },\r\n    },\r\n    {\r\n      dataField: 'data',\r\n      text: 'Dado',\r\n      sort: true,\r\n      headerClasses: 'column-title',\r\n      headerStyle: {\r\n        resize: 'horizontal',\r\n        overflow: 'auto',\r\n      },\r\n    },\r\n    {\r\n      dataField: 'date',\r\n      text: 'Data',\r\n      sort: true,\r\n      editable: false,\r\n      headerClasses: 'column-title',\r\n      headerStyle: {\r\n        resize: 'horizontal',\r\n        overflow: 'auto',\r\n      },\r\n      formatter: (data) => new Date(data).toLocaleString('pt-BR'),\r\n    },\r\n  ];\r\n\r\n  const columnsCerrado = [\r\n    {\r\n      dataField: 'id',\r\n      text: 'ID',\r\n      sort: true,\r\n      headerClasses: 'column-title',\r\n      editable: false,\r\n      headerStyle: {\r\n        resize: 'horizontal',\r\n        overflow: 'auto',\r\n      },\r\n    },\r\n    {\r\n      dataField: 'esn',\r\n      text: 'Número de série',\r\n      sort: true,\r\n      headerClasses: 'column-title',\r\n      headerStyle: {\r\n        resize: 'horizontal',\r\n        overflow: 'auto',\r\n      },\r\n    },\r\n    {\r\n      dataField: 'data',\r\n      text: 'Dado',\r\n      sort: true,\r\n      headerClasses: 'column-title',\r\n      headerStyle: {\r\n        resize: 'horizontal',\r\n        overflow: 'auto',\r\n      },\r\n    },\r\n    {\r\n      dataField: 'rain',\r\n      text: 'Precipitação',\r\n      sort: true,\r\n      headerClasses: 'column-title',\r\n      headerStyle: {\r\n        resize: 'horizontal',\r\n        overflow: 'auto',\r\n      },\r\n    },\r\n    {\r\n      dataField: 'level',\r\n      text: 'Nível de Água',\r\n      sort: true,\r\n      headerClasses: 'column-title',\r\n      headerStyle: {\r\n        resize: 'horizontal',\r\n        overflow: 'auto',\r\n      },\r\n    },\r\n    {\r\n      dataField: 'date',\r\n      text: 'Data',\r\n      sort: true,\r\n      headerClasses: 'column-title',\r\n      headerStyle: {\r\n        resize: 'horizontal',\r\n        overflow: 'auto',\r\n      },\r\n      formatter: (data) => new Date(data * 1000).toLocaleString(),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    populateUserOptions();\r\n    populateStationOptions();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (stationChanged) {\r\n      setData([]);\r\n      fetchStationData(station.id);\r\n      if (localStorage.getItem('bla'))\r\n        fetchCerradoTableData(station.id);\r\n      else fetchFreeTableData();\r\n      setStationChanged(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [stationChanged]);\r\n\r\n  useEffect(() => {\r\n    if (userChangedEdit) {\r\n      populateStationEditOptions();\r\n      setUserChangedEdit(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [userChangedEdit]);\r\n\r\n  //fetch cards data {media e last rain} -> retorna dados da ultima semana\r\n  const fetchStationData = async (stationId) => {\r\n    await setGraphDataLoaded(false);\r\n    if (stationId === '-') return;\r\n    let accMensal = 0,\r\n      accRainDay = 0,\r\n      accNivelDay = 0,\r\n      qntdDados = 0;\r\n    const graphData = [\r\n      [\r\n        { type: 'date', label: 'Tempo' },\r\n        'Acumulado de Precipitação',\r\n        'Média do Nível do Rio',\r\n      ],\r\n    ];\r\n\r\n    const response = api.get(`monthData/${stationId}`);\r\n    await response\r\n      .then(async (res) => {\r\n        if (res.data.length === 0) {\r\n          graphData.push([new Date(), 0, 0]);\r\n          await setGraphData(graphData);\r\n          await setMonthName(monthArray[new Date().getMonth()]);\r\n          await setGraphDataLoaded(true);\r\n          return;\r\n        }\r\n\r\n        let currentDay = new Date(res.data[0].date * 1000);\r\n        setMonthName(monthArray[currentDay.getMonth()]);\r\n        res.data.map((dado, index) => {\r\n          // accMensal += Number(dado.rain);\r\n          if (currentDay.getDate() === new Date(dado.date * 1000).getDate()) {\r\n            accRainDay += dado.rain;\r\n            accNivelDay += dado.level;\r\n            qntdDados++;\r\n          } else {\r\n            accNivelDay /= qntdDados;\r\n\r\n            const lastDate = res.data[index - qntdDados - 1];\r\n            graphData.push([\r\n              lastDate !== undefined\r\n                ? new Date(lastDate.date * 1000)\r\n                : new Date(res.data[index - qntdDados].date * 1000),\r\n              accRainDay,\r\n              accNivelDay,\r\n            ]);\r\n\r\n            currentDay.setDate(currentDay.getDate() - 1);\r\n            accRainDay = dado.rain;\r\n            accNivelDay = dado.level;\r\n            qntdDados = 0;\r\n          }\r\n\r\n          return 0;\r\n        });\r\n\r\n        accNivelDay /= qntdDados + 1;\r\n\r\n        const lastDate = res.data[res.data.length - qntdDados - 1];\r\n        graphData.push([\r\n          lastDate !== undefined\r\n            ? new Date(lastDate.date * 1000)\r\n            : new Date(res.data[res.data.length - qntdDados].date * 1000),\r\n          accRainDay,\r\n          accNivelDay,\r\n        ]);\r\n        await setGraphData(graphData);\r\n\r\n        await setStationCard({\r\n          level: res.data[0] === undefined ? '-' : res.data[0].level,\r\n          accMensal: res.data[0].rain,\r\n          timestamp: res.data[0] === undefined ? '-' : res.data[0].date,\r\n        });\r\n\r\n        await setTimeout(() => setGraphDataLoaded(true), 1000);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const populateUserOptions = () => {\r\n    // const response = api.get('user');\r\n    // const userOptions = [];\r\n\r\n    // response\r\n    //   .then((res) => {\r\n    //     res.data.map((user, index) =>\r\n    //       userOptions.push(\r\n    //         <option key={index} value={user.id}>\r\n    //           {user.user}\r\n    //         </option>\r\n    //       )\r\n    //     );\r\n    //     return res;\r\n    //   })\r\n    //   .then(() => setUserOptions(userOptions))\r\n    //   .catch(async (err) => {\r\n    //     if (err.status === 401) {\r\n    //       history.push({\r\n    //         pathname: '/dashboard/logout',\r\n    //       });\r\n    //       return;\r\n    //     }\r\n    //     await setAlertVariant('danger');\r\n    //     await setAlertBodyText(`Ocorreu um erro:${'\\\\'}${err.data}`);\r\n    //     await setShowAlert(true);\r\n    //     await setTimeout(() => {\r\n    //       setShowAlert(false);\r\n    //     }, 5000);\r\n    //   });\r\n  };\r\n\r\n  const populateStationOptions = () => {\r\n    // const response = api.get(`userModens`);\r\n    // const stationOptions = [];\r\n\r\n    // response\r\n    //   .then((res) => {\r\n    //     res.data.map((station, index) =>\r\n    //       stationOptions.push(\r\n    //         <option\r\n    //           key={index}\r\n    //           value={station.id}\r\n    //           userid={station.user}\r\n    //           depth={station.depth}\r\n    //           esn={station.esn}\r\n    //         >\r\n    //           {station.name}\r\n    //         </option>\r\n    //       )\r\n    //     );\r\n    //     if (res.data.length > 0) {\r\n    //       const aux = res.data[0];\r\n    //       setStation({\r\n    //         id: aux.id,\r\n    //         userid: aux.user,\r\n    //         name: aux.name,\r\n    //         esn: aux.esn,\r\n    //         depth: aux.depth,\r\n    //       });\r\n    //     }\r\n    //     setStationOptions(stationOptions);\r\n    //     setStationChanged(true);\r\n    //   })\r\n    //   .catch((err) => console.log(err));\r\n  };\r\n\r\n  const populateStationEditOptions = async () => {\r\n    const response = api.get(`modem/${station.userid}`);\r\n    const stationEditOptions = [];\r\n    response\r\n      .then((res) => {\r\n        res.data.map((station, index) =>\r\n          stationEditOptions.push(\r\n            <option\r\n              key={index}\r\n              name={station.name}\r\n              userid={station.user}\r\n              esn={station.esn}\r\n              depth={station.depth}\r\n              value={station.id}\r\n            >\r\n              {station.name}\r\n            </option>\r\n          )\r\n        );\r\n      })\r\n      .then(() => setStationOptions(stationEditOptions))\r\n      .then(() => {\r\n        const stationDefault = stationEditOptions[0];\r\n        if (stationDefault !== undefined) setStation(stationDefault.props);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const fetchFreeTableData = async () => {\r\n    setData([]);\r\n    let dataArray = [];\r\n    let qntd = 35;\r\n\r\n    while(qntd > 0){\r\n      dataArray.push({id: qntd, esn: 'EX-1234',data: Number((Math.random()*10000).toFixed(2)).toLocaleString('pt-BR'), date: new Date().getTime() + qntd*62000})\r\n      qntd--;\r\n    }\r\n\r\n    await setData(dataArray);\r\n  };\r\n\r\n  const fetchCerradoTableData = (stationId) => {\r\n    if (stationId === '-') return;\r\n    api.get(`data/${stationId}`).then(async (res) => {\r\n      await setData(res.data);\r\n    });\r\n\r\n  };\r\n\r\n  const handleChangeStation = () => {\r\n    const stationName = stationOptions.filter(\r\n      (st) => Number(st.props.value) === Number(station.id)\r\n    );\r\n    setStation({ ...station, name: stationName[0].props.children });\r\n    setData([]);\r\n    setStationChanged(true);\r\n  };\r\n\r\n  const handleSaveNewStation = () => {\r\n    if (station.esn === '' || station.depth === '' || station.name === '') {\r\n      alert('Modem, profundidade e nome não podem ser vazios');\r\n      return;\r\n    }\r\n\r\n    const response = api.post('modem', {\r\n      user: station.userid,\r\n      name: station.name,\r\n      depth: station.depth,\r\n      esn: station.esn,\r\n    });\r\n    response\r\n      .then(async (res) => {\r\n        await setShowNewStationModal(false);\r\n        await setAlertVariant('success');\r\n        await setAlertBodyText('Modem criado com sucesso!');\r\n        await setShowAlert(true);\r\n        await setTimeout(() => {\r\n          setShowAlert(false);\r\n        }, 5000);\r\n      })\r\n      .catch(async (err) => {\r\n        await setShowNewStationModal(false);\r\n        await setAlertVariant('danger');\r\n        await setAlertBodyText(`Ocorreu um erro:${'\\\\'}${err.data}`);\r\n        await setShowAlert(true);\r\n        await setTimeout(() => {\r\n          setShowAlert(false);\r\n        }, 5000);\r\n      });\r\n  };\r\n\r\n  const handleStationChangedEdit = async (stationId) => {\r\n    const station = stationOptions.filter(\r\n      (st) => Number(st.props.value) === Number(stationId)\r\n    );\r\n    await setStation({\r\n      id: station[0].props.value,\r\n      name: station[0].props.children,\r\n      esn: station[0].props.esn,\r\n      depth: station[0].props.depth,\r\n    });\r\n\r\n    setStationChangedEdit(true);\r\n  };\r\n\r\n  const handleUpdateModem = () => {\r\n    const response = api.put('modem', {\r\n      id: station.id,\r\n      name: station.name,\r\n      esn: station.esn,\r\n      depth: station.depth,\r\n    });\r\n\r\n    response\r\n      .then(async (res) => {\r\n        await setShowEditStationModal(false);\r\n        await setAlertVariant('success');\r\n        await setAlertBodyText('Modem atualizado com sucesso!');\r\n        await setShowAlert(true);\r\n        await populateStationOptions();\r\n        await setTimeout(() => {\r\n          setShowAlert(false);\r\n        }, 5000);\r\n      })\r\n      .catch(async (err) => {\r\n        await setShowEditStationModal(false);\r\n        await setAlertVariant('danger');\r\n        await setAlertBodyText(`Ocorreu um erro:${'\\\\'}${err.data}`);\r\n        await setShowAlert(true);\r\n        await setTimeout(() => {\r\n          setShowAlert(false);\r\n        }, 5000);\r\n      });\r\n  };\r\n\r\n  const renderModalNewStation = () => {\r\n    return (\r\n      <Modal\r\n        style={{ justifyContent: 'center' }}\r\n        show={showNewStationModal}\r\n        onHide={() => {\r\n          setShowNewStationModal(false);\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title style={{ fontSize: '24px' }}>Novo Modem</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <span>Selecione o usuário: </span>\r\n            <select\r\n              onChange={async (e) => {\r\n                await setStation({ ...station, userid: e.target.value });\r\n              }}\r\n            >\r\n              {userOptions}\r\n            </select>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <span>Nome do modem: </span>\r\n            <input\r\n              style={{ marginLeft: '13px' }}\r\n              autoFocus\r\n              name='name'\r\n              type='text'\r\n              placeholder='Nome do modem...'\r\n              value={station.name}\r\n              onChange={(e) => setStation({ ...station, name: e.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <span>Número de série: </span>\r\n            <input\r\n              style={{ marginLeft: '21px' }}\r\n              name='esn'\r\n              type='text'\r\n              placeholder='Número de série...'\r\n              value={station.esn}\r\n              onChange={(e) => setStation({ ...station, esn: e.target.value })}\r\n            />\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <span>Profundidade: </span>\r\n            <input\r\n              style={{ marginLeft: '44px' }}\r\n              min={1}\r\n              name='depth'\r\n              type='number'\r\n              placeholder='Profundidade...'\r\n              value={station.depth}\r\n              onChange={(e) =>\r\n                setStation({ ...station, depth: e.target.value })\r\n              }\r\n            />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => setShowNewStationModal(false)}\r\n            variant='outline-secondary'\r\n          >\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={handleSaveNewStation} variant='info'>\r\n            Salvar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const renderModalEditStation = () => {\r\n    return (\r\n      <Modal\r\n        style={{ justifyContent: 'center' }}\r\n        show={showEditStationModal}\r\n        onHide={() => {\r\n          setShowEditStationModal(false);\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title style={{ fontSize: '24px' }}>Editar Modem</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <span>Selecione o usuário: </span>\r\n            <select\r\n              style={{ marginLeft: '3px' }}\r\n              onChange={async (e) => {\r\n                await setStation({\r\n                  ...station,\r\n                  name: '',\r\n                  depth: '',\r\n                  esn: '',\r\n                  userid: e.target.value,\r\n                });\r\n                await setUserChangedEdit(true);\r\n              }}\r\n            >\r\n              {userOptions}\r\n            </select>\r\n          </div>\r\n\r\n          <div style={{ marginBottom: '10px' }}>\r\n            <span>Selecione o modem: </span>\r\n            <select\r\n              onChange={async (e) => {\r\n                let id = e.target.value;\r\n                // await setStation({ ...station, id: e.target.value });\r\n                await setStationChangedEdit(false);\r\n                await handleStationChangedEdit(id);\r\n              }}\r\n            >\r\n              {stationOptions}\r\n            </select>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          {stationChangedEdit ? (\r\n            <React.Fragment>\r\n              <div style={{ marginBottom: '10px' }}>\r\n                <span>Nome do modem: </span>\r\n                <input\r\n                  style={{ marginLeft: '16px' }}\r\n                  autoFocus\r\n                  name='name'\r\n                  type='text'\r\n                  placeholder='Nome do modem...'\r\n                  value={station.name}\r\n                  onChange={(e) =>\r\n                    setStation({ ...station, name: e.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <div style={{ marginBottom: '10px' }}>\r\n                <span>Número de série: </span>\r\n                <input\r\n                  style={{ marginLeft: '24px' }}\r\n                  name='esn'\r\n                  type='text'\r\n                  placeholder='Número de série...'\r\n                  value={station.esn}\r\n                  onChange={(e) =>\r\n                    setStation({ ...station, esn: e.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <div style={{ marginBottom: '10px' }}>\r\n                <span>Profundidade: </span>\r\n                <input\r\n                  style={{ marginLeft: '47px' }}\r\n                  min={1}\r\n                  name='depth'\r\n                  type='number'\r\n                  placeholder='Profundidade...'\r\n                  value={station.depth === undefined ? 0 : station.depth}\r\n                  onChange={(e) =>\r\n                    setStation({ ...station, depth: e.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n            </React.Fragment>\r\n          ) : null}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => setShowEditStationModal(false)}\r\n            variant='outline-secondary'\r\n          >\r\n            Cancelar\r\n          </Button>\r\n          <Button onClick={handleUpdateModem} variant='info'>\r\n            Atualizar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const renderModalSelectStation = () => {\r\n    return (\r\n      <Modal\r\n        style={{ justifyContent: 'center' }}\r\n        show={showModalSelectStation}\r\n        onHide={() => {\r\n          setShowModalSelectStation(false);\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title style={{ fontSize: '24px' }}>Alterar Modem</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <span>Modem: </span>\r\n            <select\r\n              onChange={async (e) => {\r\n                await setStation({ ...station, id: e.target.value });\r\n              }}\r\n            >\r\n              {stationOptions}\r\n            </select>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={() => setShowModalSelectStation(false)}\r\n            variant='outline-secondary'\r\n          >\r\n            Cancelar\r\n          </Button>\r\n          <Button\r\n            onClick={async () => {\r\n              await setShowModalSelectStation(false);\r\n              await handleChangeStation();\r\n            }}\r\n            variant='info'\r\n          >\r\n            Alterar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const renderNewModemButton = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          marginLeft: '-50px',\r\n          marginRight: '10px',\r\n          marginBottom: '10px',\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={async () => {\r\n            await setStation({ ...station, name: '', esn: '', depth: '' });\r\n            setShowNewStationModal(true);\r\n          }}\r\n          variant='outline-info'\r\n          style={{ width: '140px' }}\r\n        >\r\n          Novo Modem\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderEditStationButton = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          marginLeft: '-50px',\r\n          marginRight: '10px',\r\n          marginBottom: '10px',\r\n        }}\r\n      >\r\n        <Button\r\n          onClick={async () => {\r\n            await setStation({ name: '', depth: '', modem: '' });\r\n            await populateStationOptions();\r\n            await setShowEditStationModal(true);\r\n          }}\r\n          variant='outline-info'\r\n          style={{ width: '140px' }}\r\n        >\r\n          Editar Modem\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderStationDash = (station) => {\r\n    return (\r\n      <div style={styles.cardsContainer}>\r\n        <div style={{ display: 'inline-flex' }}>\r\n          {renderSelectStationContainer()}\r\n\r\n          <div\r\n            style={{\r\n              position: 'relative',\r\n              display: 'inline-flex',\r\n              left: '5%',\r\n            }}\r\n          >\r\n            <DashCard\r\n              title='Acumulado Precipitação'\r\n              value={station.accMensal}\r\n              icon={rainIcon}\r\n              timestamp={station.timestamp}\r\n              unit={'mm'}\r\n            />\r\n            <DashCard\r\n              title='Último Nível do Rio'\r\n              value={station.level}\r\n              icon={dropIcon}\r\n              timestamp={station.timestamp}\r\n              unit={'m'}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSelectStationContainer = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          alignSelf: 'center',\r\n          marginRight: '73px',\r\n          marginBottom: '10px',\r\n        }}\r\n      >\r\n        <div style={{ float: 'left' }}>\r\n          <span style={{ fontSize: '30px', float: 'left' }}>\r\n            Estação: {station.name}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <Button\r\n            onClick={async () => {\r\n              await setStation({\r\n                ...station,\r\n                id: stationOptions[0].props.value,\r\n              });\r\n              setShowModalSelectStation(true);\r\n            }}\r\n            style={{ marginRight: '10px' }}\r\n            variant='outline-info'\r\n          >\r\n            Alterar\r\n          </Button>\r\n          <Button\r\n            onClick={async () => {\r\n              await setStationCard({ ...station, rain: '-', accMensal: '-' });\r\n              await setData([]);\r\n              await setGraphData([]);\r\n              fetchStationData(station.id);\r\n              if (localStorage.getItem('bla')) {\r\n                fetchCerradoTableData(station.id);\r\n              } else {\r\n                fetchFreeTableData(station.id);\r\n              }\r\n            }}\r\n            variant='outline-info'\r\n          >\r\n            Atualizar\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderGraph = () => {\r\n    return (\r\n      <div style={{ margin: '50px 0px 50px 0px' }}>\r\n        <Chart\r\n          width={'100%'}\r\n          height={'500'}\r\n          chartType='Line'\r\n          chartLanguage='pt-BR'\r\n          loader={<div>Carregando Gráfico...</div>}\r\n          data={graphData}\r\n          options={{\r\n            chart: {\r\n              title: `Gráfico Acumulado de Precipitação e Média do Nível do Rio, do mês de ${monthName}`,\r\n            },\r\n            width: '100%',\r\n            height: 500,\r\n            series: {\r\n              // Gives each series an axis name that matches the Y-axis below.\r\n              0: { axis: 'rain' },\r\n              1: { axis: 'nivel' },\r\n            },\r\n            axes: {\r\n              // Adds labels to each axis; they don't have to match the axis names.\r\n              y: {\r\n                rain: { label: 'Acumulado Precipitação (mm)' },\r\n                nivel: { label: 'Média do Nível do Rio(m)' },\r\n              },\r\n            },\r\n          }}\r\n          rootProps={{ 'data-testid': '4' }}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className='container-fluid' style={{ display: 'flex' }}>\r\n      <div\r\n        style={{\r\n          position: 'relative',\r\n          left: 'calc(10%)',\r\n          selfAlign: 'flex-right',\r\n          width: '80%',\r\n        }}\r\n      >\r\n        {showAlert && (\r\n          <Alerts\r\n            type='simple'\r\n            variant={alertVariant}\r\n            bodyText={alertBodyText}\r\n          />\r\n        )}\r\n\r\n        {localStorage.getItem('bla') ? (\r\n          <React.Fragment>\r\n            {renderStationDash(stationCard)}\r\n            {renderModalSelectStation()}\r\n            {graphDataLoaded && renderGraph()}\r\n\r\n            <TableDash\r\n              title='Example Table'\r\n              keyField='id'\r\n              data={data}\r\n              columns={columnsCerrado}\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n          <div style={{ display: 'inline-flex' }}>\r\n            {renderModalNewStation()}\r\n            {renderModalEditStation()}\r\n            <div>\r\n              {isMaster && renderNewModemButton()}\r\n              {isMaster && renderEditStationButton()}\r\n            </div>\r\n            <div></div>\r\n\r\n            <TableDash\r\n              title='Example Table'\r\n              keyField='id'\r\n              data={data}\r\n              columns={columns}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst styles = {\r\n  cardsContainer: {\r\n    position: 'relative',\r\n    marginBottom: '5px',\r\n  },\r\n\r\n  header: {\r\n    textAlign: 'center',\r\n  },\r\n  line: {\r\n    borderBottom: '2px solid #449eba',\r\n    position: 'relative',\r\n    width: '85%',\r\n    left: '25px',\r\n    padding: '10px',\r\n  },\r\n  shadow: {\r\n    borderBottom: '2px solid #153038',\r\n    position: 'relative',\r\n    left: '25px',\r\n    width: '85%',\r\n  },\r\n  title: {\r\n    position: 'relative',\r\n    left: '0%',\r\n    color: '#449eba',\r\n    textShadow: '2px 2px #153038',\r\n    padding: '0px',\r\n  },\r\n};\r\n","import React from 'react';\r\n\r\nconst AboutUs = () => {\r\n  return (\r\n    <div className='container-fluid'>\r\n      <div>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n        tempor incididunt ut labore et dolore magna aliqua. Quisque sagittis\r\n        purus sit amet volutpat consequat mauris nunc congue. Aliquam id diam\r\n        maecenas ultricies mi eget mauris pharetra. Tortor at auctor urna nunc\r\n        id. Quam adipiscing vitae proin sagittis nisl rhoncus mattis rhoncus\r\n        urna. Aliquet sagittis id consectetur purus ut faucibus pulvinar. Ante\r\n        in nibh mauris cursus. Nibh venenatis cras sed felis eget velit aliquet.\r\n        Libero id faucibus nisl tincidunt eget. Volutpat diam ut venenatis\r\n        tellus in. Semper risus in hendrerit gravida rutrum quisque. Cursus\r\n        mattis molestie a iaculis at erat. Turpis massa sed elementum tempus.\r\n        Massa tincidunt nunc pulvinar sapien et. Adipiscing elit duis tristique\r\n        sollicitudin nibh sit amet. Iaculis at erat pellentesque adipiscing\r\n        commodo elit at imperdiet. Sit amet tellus cras adipiscing enim eu\r\n        turpis egestas pretium. Ante metus dictum at tempor commodo ullamcorper\r\n        a lacus vestibulum. Morbi non arcu risus quis varius. Cursus metus\r\n        aliquam eleifend mi in nulla posuere. Faucibus nisl tincidunt eget\r\n        nullam non nisi est sit. Arcu cursus vitae congue mauris rhoncus aenean\r\n        vel elit. Arcu non odio euismod lacinia at quis risus sed. Sit amet est\r\n        placerat in egestas erat imperdiet sed euismod. Convallis aenean et\r\n        tortor at. Fusce ut placerat orci nulla pellentesque dignissim enim sit.\r\n        Molestie a iaculis at erat pellentesque adipiscing. Integer feugiat\r\n        scelerisque varius morbi enim nunc faucibus. Venenatis tellus in metus\r\n        vulputate. Ornare arcu dui vivamus arcu felis bibendum ut tristique et.\r\n        Pellentesque habitant morbi tristique senectus et netus et malesuada\r\n        fames. Praesent tristique magna sit amet purus. Sed euismod nisi porta\r\n        lorem mollis aliquam ut. Sollicitudin aliquam ultrices sagittis orci a\r\n        scelerisque purus semper eget. Adipiscing tristique risus nec feugiat in\r\n        fermentum posuere. Egestas congue quisque egestas diam. Venenatis lectus\r\n        magna fringilla urna porttitor rhoncus. Sit amet justo donec enim diam\r\n        vulputate ut. Sed risus pretium quam vulputate dignissim suspendisse in\r\n        est. Tempus egestas sed sed risus. Mi ipsum faucibus vitae aliquet nec.\r\n        Semper eget duis at tellus at urna condimentum mattis. Pellentesque elit\r\n        ullamcorper dignissim cras tincidunt lobortis. Volutpat blandit aliquam\r\n        etiam erat velit scelerisque in dictum. Tellus molestie nunc non blandit\r\n        massa. Vestibulum rhoncus est pellentesque elit ullamcorper dignissim\r\n        cras tincidunt lobortis. Facilisis mauris sit amet massa vitae tortor\r\n        condimentum lacinia. Vel pretium lectus quam id leo in. Mauris in\r\n        aliquam sem fringilla ut morbi tincidunt augue interdum. Pharetra diam\r\n        sit amet nisl suscipit. Ut eu sem integer vitae justo eget magna\r\n        fermentum. Sit amet massa vitae tortor condimentum lacinia quis vel.\r\n        Massa sapien faucibus et molestie ac. Nec sagittis aliquam malesuada\r\n        bibendum. Bibendum neque egestas congue quisque. Viverra justo nec\r\n        ultrices dui. Dignissim diam quis enim lobortis scelerisque fermentum\r\n        dui. Tellus elementum sagittis vitae et leo. Eget nulla facilisi etiam\r\n        dignissim diam quis enim lobortis. Lobortis feugiat vivamus at augue\r\n        eget arcu dictum. Viverra vitae congue eu consequat ac felis. Nunc\r\n        lobortis mattis aliquam faucibus purus in massa. Egestas egestas\r\n        fringilla phasellus faucibus scelerisque eleifend donec pretium. Aliquam\r\n        eleifend mi in nulla posuere sollicitudin. Tristique et egestas quis\r\n        ipsum. Mi bibendum neque egestas congue quisque egestas. Diam quis enim\r\n        lobortis scelerisque fermentum dui faucibus in ornare. Eu sem integer\r\n        vitae justo eget magna. Quam id leo in vitae turpis massa. Sed blandit\r\n        libero volutpat sed cras ornare. Accumsan lacus vel facilisis volutpat.\r\n        Morbi tempus iaculis urna id. Velit scelerisque in dictum non\r\n        consectetur a erat nam at. Risus nullam eget felis eget nunc. Sit amet\r\n        consectetur adipiscing elit pellentesque. Aliquam eleifend mi in nulla.\r\n        Scelerisque eu ultrices vitae auctor eu. Egestas pretium aenean pharetra\r\n        magna. Lectus quam id leo in. Posuere morbi leo urna molestie at\r\n        elementum eu. Porta non pulvinar neque laoreet suspendisse. Vel eros\r\n        donec ac odio tempor orci dapibus ultrices in.\r\n      </div>\r\n\r\n      <div>\r\n        What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing\r\n        and typesetting industry. Lorem Ipsum has been the industry's standard\r\n        dummy text ever since the 1500s, when an unknown printer took a galley\r\n        of type and scrambled it to make a type specimen book. It has survived\r\n        not only five centuries, but also the leap into electronic typesetting,\r\n        remaining essentially unchanged. It was popularised in the 1960s with\r\n        the release of Letraset sheets containing Lorem Ipsum passages, and more\r\n        recently with desktop publishing software like Aldus PageMaker including\r\n        versions of Lorem Ipsum. Why do we use it? It is a long established fact\r\n        that a reader will be distracted by the readable content of a page when\r\n        looking at its layout. The point of using Lorem Ipsum is that it has a\r\n        more-or-less normal distribution of letters, as opposed to using\r\n        'Content here, content here', making it look like readable English. Many\r\n        desktop publishing packages and web page editors now use Lorem Ipsum as\r\n        their default model text, and a search for 'lorem ipsum' will uncover\r\n        many web sites still in their infancy. Various versions have evolved\r\n        over the years, sometimes by accident, sometimes on purpose (injected\r\n        humour and the like). Where does it come from? Contrary to popular\r\n        belief, Lorem Ipsum is not simply random text. It has roots in a piece\r\n        of classical Latin literature from 45 BC, making it over 2000 years old.\r\n        Richard McClintock, a Latin professor at Hampden-Sydney College in\r\n        Virginia, looked up one of the more obscure Latin words, consectetur,\r\n        from a Lorem Ipsum passage, and going through the cites of the word in\r\n        classical literature, discovered the undoubtable source. Lorem Ipsum\r\n        comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et\r\n        Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC.\r\n        This book is a treatise on the theory of ethics, very popular during the\r\n        Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit\r\n        amet..\", comes from a line in section 1.10.32. The standard chunk of\r\n        Lorem Ipsum used since the 1500s is reproduced below for those\r\n        interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et\r\n        Malorum\" by Cicero are also reproduced in their exact original form,\r\n        accompanied by English versions from the 1914 translation by H. Rackham.\r\n        Where can I get some? There are many variations of passages of Lorem\r\n        Ipsum available, but the majority have suffered alteration in some form,\r\n        by injected humour, or randomised words which don't look even slightly\r\n        believable. If you are going to use a passage of Lorem Ipsum, you need\r\n        to be sure there isn't anything embarrassing hidden in the middle of\r\n        text. All the Lorem Ipsum generators on the Internet tend to repeat\r\n        predefined chunks as necessary, making this the first true generator on\r\n        the Internet. It uses a dictionary of over 200 Latin words, combined\r\n        with a handful of model sentence structures, to generate Lorem Ipsum\r\n        which looks reasonable. The generated Lorem Ipsum is therefore always\r\n        free from repetition, injected humour, or non-characteristic words etc.\r\n      </div>\r\n      <div>\r\n        What is Lorem Ipsum? Lorem Ipsum is simply dummy text of the printing\r\n        and typesetting industry. Lorem Ipsum has been the industry's standard\r\n        dummy text ever since the 1500s, when an unknown printer took a galley\r\n        of type and scrambled it to make a type specimen book. It has survived\r\n        not only five centuries, but also the leap into electronic typesetting,\r\n        remaining essentially unchanged. It was popularised in the 1960s with\r\n        the release of Letraset sheets containing Lorem Ipsum passages, and more\r\n        recently with desktop publishing software like Aldus PageMaker including\r\n        versions of Lorem Ipsum. Why do we use it? It is a long established fact\r\n        that a reader will be distracted by the readable content of a page when\r\n        looking at its layout. The point of using Lorem Ipsum is that it has a\r\n        more-or-less normal distribution of letters, as opposed to using\r\n        'Content here, content here', making it look like readable English. Many\r\n        desktop publishing packages and web page editors now use Lorem Ipsum as\r\n        their default model text, and a search for 'lorem ipsum' will uncover\r\n        many web sites still in their infancy. Various versions have evolved\r\n        over the years, sometimes by accident, sometimes on purpose (injected\r\n        humour and the like). Where does it come from? Contrary to popular\r\n        belief, Lorem Ipsum is not simply random text. It has roots in a piece\r\n        of classical Latin literature from 45 BC, making it over 2000 years old.\r\n        Richard McClintock, a Latin professor at Hampden-Sydney College in\r\n        Virginia, looked up one of the more obscure Latin words, consectetur,\r\n        from a Lorem Ipsum passage, and going through the cites of the word in\r\n        classical literature, discovered the undoubtable source. Lorem Ipsum\r\n        comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et\r\n        Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC.\r\n        This book is a treatise on the theory of ethics, very popular during the\r\n        Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit\r\n        amet..\", comes from a line in section 1.10.32. The standard chunk of\r\n        Lorem Ipsum used since the 1500s is reproduced below for those\r\n        interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et\r\n        Malorum\" by Cicero are also reproduced in their exact original form,\r\n        accompanied by English versions from the 1914 translation by H. Rackham.\r\n        Where can I get some? There are many variations of passages of Lorem\r\n        Ipsum available, but the majority have suffered alteration in some form,\r\n        by injected humour, or randomised words which don't look even slightly\r\n        believable. If you are going to use a passage of Lorem Ipsum, you need\r\n        to be sure there isn't anything embarrassing hidden in the middle of\r\n        text. All the Lorem Ipsum generators on the Internet tend to repeat\r\n        predefined chunks as necessary, making this the first true generator on\r\n        the Internet. It uses a dictionary of over 200 Latin words, combined\r\n        with a handful of model sentence structures, to generate Lorem Ipsum\r\n        which looks reasonable. The generated Lorem Ipsum is therefore always\r\n        free from repetition, injected humour, or non-characteristic words etc.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Container, Row, Col } from 'react-bootstrap';\r\nimport '../assets/css/Login.css';\r\nimport logo from '../assets/img/logo.png';\r\nimport api from '../services/api';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport Alerts from '../Components/Alerts';\r\nimport DashCard from '../Components/DashCard';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSatellite, faSatelliteDish } from '@fortawesome/free-solid-svg-icons';\r\nimport '../assets/css/Login.css'\r\n\r\nconst Login2 = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n  const { register, handleSubmit, reset, errors } = useForm();\r\n  const [showLogoutAlert, setShowLogoutAlert] = useState(false);\r\n  const [station1, setStation1] = useState({\r\n    rain: '-',\r\n    accMensal: '-',\r\n    timestamp: '-',\r\n  });\r\n  const [station2, setStation2] = useState({\r\n    rain: '-',\r\n    accMensal: '-',\r\n    timestamp: '-',\r\n  });\r\n  const [station3, setStation3] = useState({\r\n    rain: '-',\r\n    accMensal: '-',\r\n    timestamp: '-',\r\n  });\r\n  const [showErrorMessage, setShowErrorMessage] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const rainIcon = (\r\n    <FontAwesomeIcon icon={faSatellite} color='#fa828b' />\r\n  );\r\n  const dropIcon = <FontAwesomeIcon icon={faSatelliteDish} color='#fa828b' />;\r\n\r\n  const onSubmit = (data, e) => {\r\n    e.target.reset();\r\n    setShowErrorMessage(false);\r\n    // const response = api.post('login', {\r\n    //   user: data.usuario,\r\n    //   password: data.senha,\r\n    // });\r\n    // response\r\n    //   .then((res) => localStorage.setItem('dash-token', res.data))\r\n    //   .then(() => localStorage.removeItem('logout'))\r\n    //   .then(() =>\r\n    //     history.push({\r\n    //       pathname: '/dashboard/',\r\n    //     })\r\n    //   )\r\n    //   .catch((err) => {\r\n    //     setErrorMessage(err.data);\r\n    //     setShowErrorMessage(true);\r\n    //   });\r\n\r\n    history.push({pathname: '/dashboard'})\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('logout')) {\r\n      setShowLogoutAlert(true);\r\n    }\r\n\r\n    localStorage.removeItem('logout');\r\n    const timer = setTimeout(() => {\r\n      setShowLogoutAlert(false);\r\n    }, 5000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  //fetch station 1\r\n  useEffect(() => {\r\n    // const serialNumber = '1';\r\n    // const response = api.get(`monthData/${serialNumber}`);\r\n    // response.then(async (res) => {\r\n    //   const accMensal = res.data\r\n    //     .reduce((acc, curr) => acc + Number(curr.rain), 0)\r\n    //     .toFixed(2);\r\n\r\n    //   await setStation1({\r\n    //     rain: res.data[0] === undefined ? '-' : res.data[0].rain,\r\n    //     accMensal: accMensal,\r\n    //     timestamp: res.data[0] === undefined ? '-' : res.data[0].date,\r\n    //   });\r\n    // });\r\n    setStation1({\r\n      rain: Number(Math.random()*100).toFixed(2), \r\n      accMensal: Number(Math.random()*10).toFixed(2),\r\n      timestamp: new Date()\r\n    })\r\n  }, []);\r\n\r\n  //fetch station 2\r\n  useEffect(() => {\r\n    // const serialNumber = '2';\r\n    // const response = api.get(`monthData/${serialNumber}`);\r\n    // response.then(async (res) => {\r\n    //   const accMensal = res.data\r\n    //     .reduce((acc, curr) => acc + Number(curr.rain), 0)\r\n    //     .toFixed(2);\r\n\r\n    //   await setStation2({\r\n    //     rain: res.data[0] === undefined ? '-' : res.data[0].rain,\r\n    //     accMensal: accMensal || '-',\r\n    //     timestamp: res.data[0] === undefined ? '-' : res.data[0].date,\r\n    //   });\r\n    // });\r\n    setStation2({\r\n      rain: Number(Math.random()*100).toFixed(2), \r\n      accMensal: Number(Math.random()*10).toFixed(2),\r\n      timestamp: new Date()\r\n    })\r\n  }, []);\r\n\r\n  //fetch station 3\r\n  useEffect(() => {\r\n    // const serialNumber = '1';\r\n    // const response = api.get(`monthData/${serialNumber}`);\r\n    // response.then(async (res) => {\r\n    //   const accMensal = res.data\r\n    //     .reduce((acc, curr) => acc + Number(curr.rain), 0)\r\n    //     .toFixed(2);\r\n\r\n    //   await setStation3({\r\n    //     rain: res.data[0] === undefined ? '-' : res.data[0].rain,\r\n    //     accMensal: accMensal,\r\n    //     timestamp: res.data[0] === undefined ? '-' : res.data[0].date,\r\n    //   });\r\n    // });\r\n    setStation3({\r\n      rain: Number(Math.random()*100).toFixed(2), \r\n      accMensal: Number(Math.random()*10).toFixed(2),\r\n      timestamp: new Date()\r\n    })\r\n      \r\n  }, []);\r\n\r\n  const renderErrorMessage = () => {\r\n    return <Alerts type='simple' variant='danger' bodyText={errorMessage} />;\r\n  };\r\n\r\n  const renderStationDash = (title, station) => {\r\n    return (\r\n      <div style={styles.cardsContainer}>\r\n        <div style={styles.header}>\r\n          <Row>\r\n            <Col style={{ padding: '0px' }}>\r\n              <div style={styles.line} />\r\n              <div style={styles.shadow} />\r\n            </Col>\r\n            <Col style={{ padding: '0px' }}>\r\n              <h4 className='title' style={styles.title}>\r\n                {title}\r\n              </h4>\r\n            </Col>\r\n            <Col style={{ padding: '0px' }}>\r\n              <div style={{ ...styles.line, left: '4px' }} />\r\n              <div style={{ ...styles.shadow, left: '4px' }} />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div style={{ display: 'inline-flex' }}>\r\n          <DashCard\r\n            title='Some Value'\r\n            value={station.accMensal}\r\n            icon={rainIcon}\r\n            timestamp={station.timestamp}\r\n            unit=''\r\n          />\r\n          <DashCard\r\n            title='Another Value'\r\n            value={station.rain}\r\n            icon={dropIcon}\r\n            timestamp={station.timestamp}\r\n            unit=''\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSignIn = () => {\r\n    return (\r\n      <div style={{ ...styles.loginWrapper }}>\r\n        <div>\r\n          <div style={styles.logo}>\r\n            <img style={{borderRadius: '50%'}} src={logo} width='200' height='130' alt='dash logo' />\r\n          </div>\r\n          <h3 style={{ margin: '0px' }}>Welcome to Dashboard Web</h3>\r\n          <h6>Author: Matheus Barros </h6>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div style={styles.inputWrapper}>\r\n              <input\r\n                autoFocus\r\n                style={styles.input}\r\n                name='usuario'\r\n                type='text'\r\n                placeholder='Usuário'\r\n                defaultValue={userName}\r\n                ref={register({ required: 'Campo usuário está vazio. Any username will do' })}\r\n                onChange={(e) => {\r\n                  setShowErrorMessage(false);\r\n                  setUserName(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                style={styles.input}\r\n                name='senha'\r\n                type='password'\r\n                placeholder='Senha'\r\n                defaultValue={password}\r\n                ref={register({ required: 'Campo senha está vazio. Any password will do' })}\r\n                onChange={(e) => {\r\n                  setShowErrorMessage(false);\r\n                  setPassword(e.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <Button onClick={() => reset()} type='submit' style={styles.button}>\r\n              Entrar\r\n            </Button>\r\n\r\n            {(errors.usuario || errors.senha) && (\r\n              <Alerts\r\n                type='simple'\r\n                variant='danger'\r\n                bodyText={\r\n                  errors.usuario ? errors.usuario.message : errors.senha.message\r\n                }\r\n              />\r\n            )}\r\n\r\n            {showErrorMessage && renderErrorMessage()}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container style={styles.container} fluid>\r\n      <Alerts\r\n        show={showLogoutAlert}\r\n        type='simple'\r\n        variant='success'\r\n        bodyText='Thank you for utilizing our platform!\\We hope to see you soon =]'\r\n      />\r\n      <Row\r\n        style={{\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          padding: '8% 0px 0px 0px',\r\n        }}\r\n      >\r\n        <Col md='auto'>{renderSignIn()}</Col>\r\n        <Col md='auto'>\r\n          {renderStationDash('Example 1', station1)}\r\n          {renderStationDash('Example 2', station2)}\r\n          {renderStationDash('Example 3', station3)}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login2;\r\n\r\nconst styles = {\r\n  container: {\r\n    position: 'relative',\r\n    height: '100%',\r\n    width: '100%',\r\n    backgroundImage: 'linear-gradient(#9ad1d4,#fa828b)',\r\n  },\r\n\r\n  loginWrapper: {\r\n    position: 'relative',\r\n    height: '450px',\r\n    width: '450px',\r\n    top: '2px',\r\n\r\n    backgroundColor: 'lavender',\r\n    boxShadow: '0px 4px 20px 4px black',\r\n    textAlign: 'center',\r\n    borderRadius: '3px',\r\n  },\r\n\r\n  input: {\r\n    textAlign: 'center',\r\n    marginBottom: '5px',\r\n    borderStyle: 'inset',\r\n    borderWidth: 'small',\r\n    borderColor: 'lightgray',\r\n  },\r\n\r\n  button: {\r\n    marginTop: '15px',\r\n    paddingLeft: '15px',\r\n    backgroundColor: '#fa828b',\r\n    color: '#e6e6fa',\r\n    borderColor: '#e6e6fa',\r\n  },\r\n\r\n  logo: {\r\n    paddingTop: '20px',\r\n    position: 'relative',\r\n    top: '15px',\r\n    marginBottom: '40px',\r\n  },\r\n\r\n  inputWrapper: {\r\n    marginTop: '30px',\r\n  },\r\n\r\n  cardsContainer: {\r\n    position: 'relative',\r\n    marginBottom: '5px',\r\n  },\r\n\r\n  header: {\r\n    textAlign: 'center',\r\n  },\r\n  line: {\r\n    borderBottom: '2px solid #fa828b',\r\n    position: 'relative',\r\n    width: '85%',\r\n    left: '25px',\r\n    padding: '10px',\r\n  },\r\n  shadow: {\r\n    borderBottom: '2px solid black',\r\n    position: 'relative',\r\n    left: '25px',\r\n    width: '85%',\r\n  },\r\n  title: {\r\n    position: 'relative',\r\n    left: '0%',\r\n    color: '#449eba',\r\n    textShadow: '2px 2px #153038',\r\n    padding: '0px',\r\n  },\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Logout = () => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const handleLogout = () => {\r\n      localStorage.removeItem('dash-token');\r\n      localStorage.setItem('logout', true);\r\n      if (localStorage.getItem('bla') !== null) {\r\n        localStorage.removeItem('bla');\r\n        history.push({ pathname: '/dashboard/login2' });\r\n      } else {\r\n        history.push({ pathname: '/login' });\r\n      }\r\n      window.location.reload();\r\n    };\r\n\r\n    handleLogout();\r\n  }, [history]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default Logout;\r\n","import React, { useEffect } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport Home from '../Views/Home';\r\nimport AboutUs from '../Views/AboutUs';\r\nimport Login2 from '../Views/Login2';\r\nimport Login from '../Views/Login';\r\nimport { IndexLinkContainer } from 'react-router-bootstrap';\r\nimport logo from '../assets/img/logo.png';\r\nimport '../assets/css/NavbarDash.css';\r\nimport Logout from './Logout';\r\n\r\nconst NavbarDash = (props) => {\r\n  useEffect(() => {\r\n    localStorage.getItem('');\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div className='row'>\r\n        <div className='col-md-12'>\r\n          <Router>\r\n            <Navbar\r\n              className='navbar-dash'\r\n              bg='light'\r\n              variant='light'\r\n              expand='lg'\r\n              sticky='top'\r\n            >\r\n              <Navbar.Brand href='/dashboard'>\r\n                <img\r\n                  style={{borderRadius: '50%'}}\r\n                  src={logo}\r\n                  width='50'\r\n                  height='50'\r\n                  className='d-inline-block align-top'\r\n                  alt='dash logo'\r\n                />\r\n              </Navbar.Brand>\r\n              <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n              <Navbar.Collapse id='basic-navbar-nav'>\r\n                <Nav activeKey={props.activekey} className='mr-auto'>\r\n                  <IndexLinkContainer to='/dashboard'>\r\n                    <Nav.Link href='/'>Home</Nav.Link>\r\n                  </IndexLinkContainer>\r\n                  <IndexLinkContainer to='/dashboard/login2'>\r\n                    <Nav.Link href='/login2'>Login2</Nav.Link>\r\n                  </IndexLinkContainer>\r\n                  <IndexLinkContainer to='/dashboard/about-us'>\r\n                    <Nav.Link href='/about-us'>About Us</Nav.Link>\r\n                  </IndexLinkContainer>\r\n                  <h2 className='title'>Dashboard Web</h2>\r\n                </Nav>\r\n                <IndexLinkContainer to='/dashboard/logout'>\r\n                  <Nav.Link href='/logout'>Sair</Nav.Link>\r\n                </IndexLinkContainer>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n            <br />\r\n            <Switch>\r\n              <Route exact path='/dashboard'>\r\n                <Home />\r\n              </Route>\r\n              <Route path='/dashboard/about-us'>\r\n                <AboutUs />\r\n              </Route>\r\n              <Route path='/dashboard/login2'>\r\n                <Login2 />\r\n              </Route>\r\n              <Route path='/login'>\r\n                <Login />\r\n              </Route>\r\n              <Route path='/dashboard/logout'>\r\n                <Logout />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarDash;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Login from './Views/Login';\r\nimport NavBarDash from '../src/Components/NavbarDash';\r\n\r\nimport { isAuthenticated } from './services/auth';\r\nimport Login2 from './Views/Login2';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated() ? (\r\n        <React.Fragment>\r\n          <Component {...props} />\r\n        </React.Fragment>\r\n      ) : (\r\n        <Redirect\r\n          to={{ pathname: '/login', state: { from: props.location } }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst Routes = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path='/login' component={() => <Login />} />\r\n      <PrivateRoute exact path='/' component={() => <NavBarDash activeKey={1} />} />\r\n\r\n      <PrivateRoute\r\n        exact\r\n        path='/dashboard'\r\n        component={() => <NavBarDash activeKey={1} />}\r\n      />\r\n      <PrivateRoute\r\n        exact\r\n        path='/dashboard/contact-us'\r\n        component={() => <NavBarDash activeKey={2} />}\r\n      />\r\n      <PrivateRoute\r\n        exact\r\n        path='/dashboard/about-us'\r\n        component={() => <NavBarDash activeKey={3} />}\r\n      />\r\n      <Route\r\n        path='/dashboard/logout'\r\n        component={() => <NavBarDash activeKey={4} />}\r\n      />\r\n      <Route\r\n        path='/dashboard/login2'\r\n        component={() => <Login2 />}\r\n      />\r\n      <Route path='*' component={() => <h1>Ops! Página não encontrada</h1>} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport Routes from './routes';\r\n\r\nconst App = () => <Routes />;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.9a7e4d92.png\";"],"sourceRoot":""}